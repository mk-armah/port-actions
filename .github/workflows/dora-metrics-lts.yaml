name: Ingest DORA Metrics

on:
  schedule:
    - cron: '0 2 * * 1'
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      owner: ${{ steps.set-matrix.outputs.owner }}
      doraTimeFrame: ${{ steps.set-matrix.outputs.doraTimeFrame }}
      doraBlueprint: ${{ steps.set-matrix.outputs.doraBlueprintID }}
      teamBlueprint: ${{ steps.set-matrix.outputs.teamBlueprintID }}
      githubHost: ${{ steps.set-matrix.outputs.githubHost }}
      dora_present: ${{ steps.set-matrix.outputs.dora_present }}
      team_present: ${{ steps.set-matrix.outputs.team_present }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get install jq

      - name: Read Config and Output Matrix
        id: set-matrix
        run: |
          CONFIG_JSON=$(cat src/dora-config-v2.json)
          MATRIX_JSON=$(echo $CONFIG_JSON | jq -c '{include: .items}')
          OWNER=$(echo $CONFIG_JSON | jq -r '.owner')
          GITHUB_HOST=$(echo $CONFIG_JSON | jq -r '.githubHost')
          DORA_TIME_FRAME=$(echo $CONFIG_JSON | jq -r '.doraTimeFrame')
          DORA_BLUEPRINT=$(echo $CONFIG_JSON | jq -r '.port.blueprints.dora // empty')
          TEAM_BLUEPRINT=$(echo $CONFIG_JSON | jq -r '.port.blueprints.team // empty')
          DORA_PRESENT=$([[ -n "$DORA_BLUEPRINT" ]] && echo "true" || echo "false")
          TEAM_PRESENT=$([[ -n "$TEAM_BLUEPRINT" ]] && echo "true" || echo "false")
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT
          echo "owner=$OWNER" >> $GITHUB_OUTPUT
          echo "githubHost=$GITHUB_HOST" >> $GITHUB_OUTPUT
          echo "doraTimeFrame=$(( DORA_TIME_FRAME * 7 ))" >> $GITHUB_OUTPUT
          echo "doraBlueprint=$DORA_BLUEPRINT" >> $GITHUB_OUTPUT
          echo "teamBlueprint=$TEAM_BLUEPRINT" >> $GITHUB_OUTPUT
          echo "dora_present=$DORA_PRESENT" >> $GITHUB_OUTPUT
          echo "team_present=$TEAM_PRESENT" >> $GITHUB_OUTPUT

  compute-team-metrics:
    needs: setup
    runs-on: ubuntu-latest
    if: needs.setup.outputs.team_present == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt
          
      - name: Compute Team Metrics
        run: |
          python src/calculate_team_metrics.py --owner "${{ needs.setup.outputs.owner }}" --time-frame "${{ needs.setup.outputs.doraTimeFrame }}" --token "${{ secrets.GH_TEAM_ACCESS_TOKEN }}" --port-client-id "${{ secrets.PORT_CLIENT_ID }}" --port-client-secret "${{ secrets.PORT_CLIENT_SECRET }}" --github-host "${{ needs.setup.outputs.githubHost }}"

  compute-repo-metrics:
    needs: setup
    runs-on: ubuntu-latest
    if: needs.setup.outputs.dora_present == 'true'
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.include.repository }}

      - name: Transform Workflow Parameters
        run: |
          cleaned_name=$(echo "${{ matrix.repository }}" | tr -c '[:alnum:]' ' ')
          TITLE=$(echo "${cleaned_name}" | awk '{for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) tolower(substr($i,2));}1')
          echo "ENTITY_TITLE=$TITLE" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt

      - name: Compute PR Metrics
        run: |
          python src/calculate_pr_metrics.py  --owner "${{ needs.setup.outputs.owner }}" --repo "${{ matrix.repository }}" --token "${{ secrets.GH_TEAM_ACCESS_TOKEN }}" --time-frame "${{ needs.setup.outputs.doraTimeFrame }}" --platform github-actions --github-host "${{ needs.setup.outputs.githubHost }}"
          
      - name: Deployment Frequency
        id: deployment_frequency
        run: python src/deployment_frequency.py --owner "${{ needs.setup.outputs.owner }}" --repo "${{ matrix.repository }}" --token "${{ secrets.GH_TEAM_ACCESS_TOKEN }}" --workflows '${{ toJson(matrix.workflows) }}' --time-frame "${{ needs.setup.outputs.doraTimeFrame }}" --branch "${{ matrix.branch }}" --platform github-actions --github-host "${{ needs.setup.outputs.githubHost }}"
      
      - name: Lead Time For Changes
        id: lead_time_for_changes
        run: python src/lead_time_for_changes.py --owner "${{ needs.setup.outputs.owner }}" --repo "${{ matrix.repository }}" --token "${{ secrets.GH_TEAM_ACCESS_TOKEN }}" --workflows '${{ toJson(matrix.workflows) }}' --time-frame "${{ needs.setup.outputs.doraTimeFrame }}" --branch ${{ matrix.branch }} --platform github-actions --github-host "${{ needs.setup.outputs.githubHost }}"

      - name: UPSERT Repository DORA Metrics
        uses: port-labs/port-github-action@v1
        with:
          identifier: "${{ matrix.repository }}-${{ needs.setup.outputs.doraTimeFrame }}"
          title: ${{ env.ENTITY_TITLE }}
          blueprint: ${{ steps.set-matrix.outputs.doraBlueprintID }}
          properties: |-
            {
              "timeFrameInWeeks": ${{ needs.setup.outputs.doraTimeFrame }},
              "totalDeployments": ${{ fromJson(env.deployment_frequency_report).total_deployments }},
              "deploymentRating": "${{ fromJson(env.deployment_frequency_report).rating }}",
              "numberOfUniqueDeploymentDays": ${{ fromJson(env.deployment_frequency_report).number_of_unique_deployment_days }},
              "numberOfUniqueDeploymentWeeks": ${{ fromJson(env.deployment_frequency_report).number_of_unique_deployment_weeks }},
              "numberOfUniqueDeploymentMonths": ${{ fromJson(env.deployment_frequency_report).number_of_unique_deployment_months }},
              "deploymentFrequency": ${{ fromJson(env.deployment_frequency_report).deployment_frequency }},
              "leadTimeForChangesInHours": ${{ fromJson(env.lead_time_for_changes_report).lead_time_for_changes_in_hours }},
              "leadTimeRating": "${{ fromJson(env.lead_time_for_changes_report).rating }}",
              "workflowAverageTimeDuration": ${{ fromJson(env.lead_time_for_changes_report).workflow_average_time_duration }},
              "prAverageTimeDuration": ${{ fromJson(env.lead_time_for_changes_report).pr_average_time_duration }},
              "averageOpenToCloseTime": ${{ fromJson(env.metrics).average_open_to_close_time }},
              "averageTimeToFirstReview": ${{ fromJson(env.metrics).average_time_to_first_review }},
              "averageTimeToApproval": ${{ fromJson(env.metrics).average_time_to_approval }},
              "prsOpened": ${{ fromJson(env.metrics).prs_opened }},
              "weeklyPrsMerged": ${{ fromJson(env.metrics).weekly_prs_merged }},
              "averageReviewsPerPr": ${{ fromJson(env.metrics).average_reviews_per_pr }},
              "averageCommitsPerPr": ${{ fromJson(env.metrics).average_commits_per_pr }},
              "averageLocChangedPerPr": ${{ fromJson(env.metrics).average_loc_changed_per_pr }},
              "averagePrsReviewedPerWeek": ${{ fromJson(env.metrics).average_prs_reviewed_per_week }}
            }
          relations: |- 
            {
            "service": "${{ matrix.repository }}"
            }
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: UPSERT
